---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: titanic-api-ingress
  namespace: hcs
  annotations:
    kubernetes.io/ingress.class: "nginx"

    nginx.org/ssl-services: "titanic-api-service"

    # TLS basic hardening
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"

    nginx.ingress.kubernetes.io/ssl-ciphers: "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256"

    nginx.ingress.kubernetes.io/proxy-ssl-secret: "hcs/titanic-api-tls"
    nginx.ingress.kubernetes.io/proxy-ssl-verify: "true"

    # load and enable modsecurity plugin
    nginx.ingress.kubernetes.io/enable-modsecurity: "true"
    nginx.ingress.kubernetes.io/enable-owasp-modsecurity-crs: "true"
    nginx.ingress.kubernetes.io/enable-owasp-core-rules: "true"

    nginx.ingress.kubernetes.io/lua-resty-waf: "active"
    # disable rules for debugging
    # nginx.ingress.kubernetes.io/lua-resty-waf-ignore-rulesets: "41000_sqli, 42000_xss, 40000_generic_attack, 35000_user_agent, 21000_http_anomaly"
    nginx.ingress.kubernetes.io/lua-resty-waf-allow-unknown-content-types: "false"
    nginx.ingress.kubernetes.io/lua-resty-waf-process-multipart-body: "true"

    # DDoS mitigations
    nginx.ingress.kubernetes.io/proxy-body-size: 2m
    # NOTE: un-comment the whithelist to allow only certain IP/ ranges to consume this ingress
    # nginx.ingress.kubernetes.io/whitelist-source-range: "<IP>/32"
    nginx.ingress.kubernetes.io/limit-connections: "10"
    nginx.ingress.kubernetes.io/limit-rps: "1"

    # enable TLS for the backends
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/secure-backends: "true"

spec:
  tls:
    - secretName: titanic-api-tls
  rules:
    - http:
        paths:
          - path: /
            backend:
              serviceName: titanic-api-service
              servicePort: 443
